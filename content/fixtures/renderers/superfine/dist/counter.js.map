{"version":3,"file":"counter.js","sources":["../../../../node_modules/superfine/src/index.js","../../../../packages/swiss-element/dist/swiss-element.mjs","../src/counter.js"],"sourcesContent":["var DEFAULT = 0\nvar RECYCLED_NODE = 1\nvar TEXT_NODE = 2\n\nvar XLINK_NS = \"http://www.w3.org/1999/xlink\"\nvar SVG_NS = \"http://www.w3.org/2000/svg\"\n\nvar EMPTY_OBJECT = {}\nvar EMPTY_ARRAY = []\n\nvar map = EMPTY_ARRAY.map\nvar isArray = Array.isArray\n\nvar merge = function(a, b) {\n  var target = {}\n\n  for (var i in a) target[i] = a[i]\n  for (var i in b) target[i] = b[i]\n\n  return target\n}\n\nvar eventProxy = function(event) {\n  return event.currentTarget.events[event.type](event)\n}\n\nvar updateProperty = function(element, name, lastValue, nextValue, isSvg) {\n  if (name === \"key\") {\n  } else if (name === \"style\") {\n    for (var i in merge(lastValue, nextValue)) {\n      var style = nextValue == null || nextValue[i] == null ? \"\" : nextValue[i]\n      if (i[0] === \"-\") {\n        element[name].setProperty(i, style)\n      } else {\n        element[name][i] = style\n      }\n    }\n  } else {\n    if (name[0] === \"o\" && name[1] === \"n\") {\n      if (!element.events) element.events = {}\n\n      element.events[(name = name.slice(2))] = nextValue\n\n      if (nextValue == null) {\n        element.removeEventListener(name, eventProxy)\n      } else if (lastValue == null) {\n        element.addEventListener(name, eventProxy)\n      }\n    } else {\n      var nullOrFalse = nextValue == null || nextValue === false\n\n      if (\n        name in element &&\n        name !== \"list\" &&\n        name !== \"draggable\" &&\n        name !== \"spellcheck\" &&\n        name !== \"translate\" &&\n        !isSvg\n      ) {\n        element[name] = nextValue == null ? \"\" : nextValue\n        if (nullOrFalse) {\n          element.removeAttribute(name)\n        }\n      } else {\n        var ns = isSvg && name !== (name = name.replace(/^xlink:?/, \"\"))\n        if (ns) {\n          if (nullOrFalse) {\n            element.removeAttributeNS(XLINK_NS, name)\n          } else {\n            element.setAttributeNS(XLINK_NS, name, nextValue)\n          }\n        } else {\n          if (nullOrFalse) {\n            element.removeAttribute(name)\n          } else {\n            element.setAttribute(name, nextValue)\n          }\n        }\n      }\n    }\n  }\n}\n\nvar createElement = function(node, lifecycle, isSvg) {\n  var element =\n    node.type === TEXT_NODE\n      ? document.createTextNode(node.name)\n      : (isSvg = isSvg || node.name === \"svg\")\n        ? document.createElementNS(SVG_NS, node.name)\n        : document.createElement(node.name)\n\n  var props = node.props\n  if (props.oncreate) {\n    lifecycle.push(function() {\n      props.oncreate(element)\n    })\n  }\n\n  for (var i = 0, length = node.children.length; i < length; i++) {\n    element.appendChild(createElement(node.children[i], lifecycle, isSvg))\n  }\n\n  for (var name in props) {\n    updateProperty(element, name, null, props[name], isSvg)\n  }\n\n  return (node.element = element)\n}\n\nvar updateElement = function(\n  element,\n  lastProps,\n  nextProps,\n  lifecycle,\n  isSvg,\n  isRecycled\n) {\n  for (var name in merge(lastProps, nextProps)) {\n    if (\n      (name === \"value\" || name === \"checked\"\n        ? element[name]\n        : lastProps[name]) !== nextProps[name]\n    ) {\n      updateProperty(element, name, lastProps[name], nextProps[name], isSvg)\n    }\n  }\n\n  var cb = isRecycled ? nextProps.oncreate : nextProps.onupdate\n  if (cb != null) {\n    lifecycle.push(function() {\n      cb(element, lastProps)\n    })\n  }\n}\n\nvar removeChildren = function(node) {\n  for (var i = 0, length = node.children.length; i < length; i++) {\n    removeChildren(node.children[i])\n  }\n\n  var cb = node.props.ondestroy\n  if (cb != null) {\n    cb(node.element)\n  }\n\n  return node.element\n}\n\nvar removeElement = function(parent, node) {\n  var remove = function() {\n    parent.removeChild(removeChildren(node))\n  }\n\n  var cb = node.props && node.props.onremove\n  if (cb != null) {\n    cb(node.element, remove)\n  } else {\n    remove()\n  }\n}\n\nvar getKey = function(node) {\n  return node == null ? null : node.key\n}\n\nvar createKeyMap = function(children, start, end) {\n  var out = {}\n  var key\n  var node\n\n  for (; start <= end; start++) {\n    if ((key = (node = children[start]).key) != null) {\n      out[key] = node\n    }\n  }\n\n  return out\n}\n\nvar patchElement = function(\n  parent,\n  element,\n  lastNode,\n  nextNode,\n  lifecycle,\n  isSvg\n) {\n  if (nextNode === lastNode) {\n  } else if (\n    lastNode != null &&\n    lastNode.type === TEXT_NODE &&\n    nextNode.type === TEXT_NODE\n  ) {\n    if (lastNode.name !== nextNode.name) {\n      element.nodeValue = nextNode.name\n    }\n  } else if (lastNode == null || lastNode.name !== nextNode.name) {\n    var newElement = parent.insertBefore(\n      createElement(nextNode, lifecycle, isSvg),\n      element\n    )\n\n    if (lastNode != null) removeElement(parent, lastNode)\n\n    element = newElement\n  } else {\n    updateElement(\n      element,\n      lastNode.props,\n      nextNode.props,\n      lifecycle,\n      (isSvg = isSvg || nextNode.name === \"svg\"),\n      lastNode.type === RECYCLED_NODE\n    )\n\n    var savedNode\n    var childNode\n\n    var lastKey\n    var lastChildren = lastNode.children\n    var lastChStart = 0\n    var lastChEnd = lastChildren.length - 1\n\n    var nextKey\n    var nextChildren = nextNode.children\n    var nextChStart = 0\n    var nextChEnd = nextChildren.length - 1\n\n    while (nextChStart <= nextChEnd && lastChStart <= lastChEnd) {\n      lastKey = getKey(lastChildren[lastChStart])\n      nextKey = getKey(nextChildren[nextChStart])\n\n      if (lastKey == null || lastKey !== nextKey) break\n\n      patchElement(\n        element,\n        lastChildren[lastChStart].element,\n        lastChildren[lastChStart],\n        nextChildren[nextChStart],\n        lifecycle,\n        isSvg\n      )\n\n      lastChStart++\n      nextChStart++\n    }\n\n    while (nextChStart <= nextChEnd && lastChStart <= lastChEnd) {\n      lastKey = getKey(lastChildren[lastChEnd])\n      nextKey = getKey(nextChildren[nextChEnd])\n\n      if (lastKey == null || lastKey !== nextKey) break\n\n      patchElement(\n        element,\n        lastChildren[lastChEnd].element,\n        lastChildren[lastChEnd],\n        nextChildren[nextChEnd],\n        lifecycle,\n        isSvg\n      )\n\n      lastChEnd--\n      nextChEnd--\n    }\n\n    if (lastChStart > lastChEnd) {\n      while (nextChStart <= nextChEnd) {\n        element.insertBefore(\n          createElement(nextChildren[nextChStart++], lifecycle, isSvg),\n          (childNode = lastChildren[lastChStart]) && childNode.element\n        )\n      }\n    } else if (nextChStart > nextChEnd) {\n      while (lastChStart <= lastChEnd) {\n        removeElement(element, lastChildren[lastChStart++])\n      }\n    } else {\n      var lastKeyed = createKeyMap(lastChildren, lastChStart, lastChEnd)\n      var nextKeyed = {}\n\n      while (nextChStart <= nextChEnd) {\n        lastKey = getKey((childNode = lastChildren[lastChStart]))\n        nextKey = getKey(nextChildren[nextChStart])\n\n        if (\n          nextKeyed[lastKey] ||\n          (nextKey != null && nextKey === getKey(lastChildren[lastChStart + 1]))\n        ) {\n          if (lastKey == null) {\n            removeElement(element, childNode)\n          }\n          lastChStart++\n          continue\n        }\n\n        if (nextKey == null || lastNode.type === RECYCLED_NODE) {\n          if (lastKey == null) {\n            patchElement(\n              element,\n              childNode && childNode.element,\n              childNode,\n              nextChildren[nextChStart],\n              lifecycle,\n              isSvg\n            )\n            nextChStart++\n          }\n          lastChStart++\n        } else {\n          if (lastKey === nextKey) {\n            patchElement(\n              element,\n              childNode.element,\n              childNode,\n              nextChildren[nextChStart],\n              lifecycle,\n              isSvg\n            )\n            nextKeyed[nextKey] = true\n            lastChStart++\n          } else {\n            if ((savedNode = lastKeyed[nextKey]) != null) {\n              patchElement(\n                element,\n                element.insertBefore(\n                  savedNode.element,\n                  childNode && childNode.element\n                ),\n                savedNode,\n                nextChildren[nextChStart],\n                lifecycle,\n                isSvg\n              )\n              nextKeyed[nextKey] = true\n            } else {\n              patchElement(\n                element,\n                childNode && childNode.element,\n                null,\n                nextChildren[nextChStart],\n                lifecycle,\n                isSvg\n              )\n            }\n          }\n          nextChStart++\n        }\n      }\n\n      while (lastChStart <= lastChEnd) {\n        if (getKey((childNode = lastChildren[lastChStart++])) == null) {\n          removeElement(element, childNode)\n        }\n      }\n\n      for (var key in lastKeyed) {\n        if (nextKeyed[key] == null) {\n          removeElement(element, lastKeyed[key])\n        }\n      }\n    }\n  }\n\n  return (nextNode.element = element)\n}\n\nvar createVNode = function(name, props, children, element, key, type) {\n  return {\n    name: name,\n    props: props,\n    children: children,\n    element: element,\n    key: key,\n    type: type\n  }\n}\n\nvar createTextVNode = function(text, element) {\n  return createVNode(text, EMPTY_OBJECT, EMPTY_ARRAY, element, null, TEXT_NODE)\n}\n\nvar recycleChild = function(element) {\n  return element.nodeType === 3 // Node.TEXT_NODE\n    ? createTextVNode(element.nodeValue, element)\n    : recycleElement(element)\n}\n\nvar recycleElement = function(element) {\n  return createVNode(\n    element.nodeName.toLowerCase(),\n    EMPTY_OBJECT,\n    map.call(element.childNodes, recycleChild),\n    element,\n    null,\n    RECYCLED_NODE\n  )\n}\n\nexport var recycle = function(container) {\n  return recycleElement(container.children[0])\n}\n\nexport var patch = function(lastNode, nextNode, container) {\n  var lifecycle = []\n\n  patchElement(container, container.children[0], lastNode, nextNode, lifecycle)\n\n  while (lifecycle.length > 0) lifecycle.pop()()\n\n  return nextNode\n}\n\nexport var h = function(name, props) {\n  var node\n  var rest = []\n  var children = []\n  var length = arguments.length\n\n  while (length-- > 2) rest.push(arguments[length])\n\n  if ((props = props == null ? {} : props).children != null) {\n    if (rest.length <= 0) {\n      rest.push(props.children)\n    }\n    delete props.children\n  }\n\n  while (rest.length > 0) {\n    if (isArray((node = rest.pop()))) {\n      for (length = node.length; length-- > 0; ) {\n        rest.push(node[length])\n      }\n    } else if (node === false || node === true || node == null) {\n    } else {\n      children.push(typeof node === \"object\" ? node : createTextVNode(node))\n    }\n  }\n\n  return typeof name === \"function\"\n    ? name(props, (props.children = children))\n    : createVNode(name, props, children, null, props.key, DEFAULT)\n}\n","function renderer(root, html) {\n  root.innerHTML = html;\n}\n\nconst isArray = Array.isArray;\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n\nfunction isUndefined(value) {\n  return typeof value === 'undefined';\n}\n\nfunction getNativeConstructor(ext) {\n  return ext ? document.createElement(ext).constructor : HTMLElement;\n}\n\nfunction define(name, Element, options) {\n  if (name) {\n    self.customElements.define(name, Element, options);\n  }\n}\n\nfunction findFreeTagName(name, suffix = null) {\n  name = name || 's';\n  const tag = suffix ? `${name}-${suffix}` : name;\n  return isFreeTagName(tag) ? tag : findFreeTagName(tag, uniqueId());\n}\n\nfunction isFreeTagName(name) {\n  return hasDash(name) && !self.customElements.get(name);\n}\n\nfunction hasDash(name) {\n  return name && /.-./.test(name);\n}\n\nfunction compose(...fns) {\n  return x => fns.filter(Boolean).reduceRight((y, f) => f(y), x);\n}\n\nfunction camelCase(name) {\n  return name.replace(/-([a-z])/g, ($0, $1) => $1.toUpperCase());\n}\n\nconst CustomEvent =\n  (isFunction(self.CustomEvent) && self.CustomEvent) || CustomEventPonyfill;\n\nfunction CustomEventPonyfill(name, params = {}) {\n  var newEvent = document.createEvent('CustomEvent');\n  newEvent.initCustomEvent(name, params.bubbles, params.cancelable, params);\n  return newEvent;\n}\n\n/**\n * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n *\n * @param {string} prefix The value to prefix the ID with.\n * @return {string} Returns the unique ID.\n * @example\n *\n *    uniqueId('contact_');\n *    // => 'contact_104'\n *\n *    uniqueId();\n *    // => '105'\n */\nlet idCounter = 0;\nfunction uniqueId(prefix = '') {\n  var id = ++idCounter;\n  return `${prefix}${id}`;\n}\n\nfunction extend(Base, init) {\n  function Class() {\n    if (!(this instanceof Class)) {\n      return new Class();\n    }\n\n    const supr = () => {\n      return typeof Reflect !== 'undefined'\n        ? Reflect.construct(Base, [], this.constructor)\n        : Base.call(this);\n    };\n\n    return init.call(this, supr);\n  }\n\n  Class.prototype = Object.create(Base.prototype);\n  Class.prototype.constructor = Class;\n\n  return Class;\n}\n\n/**\n * Create a complete assign function with custom descriptors.\n * @param  {Object} options - The custom descriptor options.\n * @return {Function}\n */\nfunction createCompleteAssign(options) {\n  return (target, ...sources) => {\n    sources.forEach(source => {\n      for (const prop in source) {\n        const descriptor = Object.getOwnPropertyDescriptor(source, prop);\n        Object.defineProperty(target, prop, Object.assign(descriptor, options));\n      }\n    });\n    return target;\n  };\n}\n\n/**\n * Complete assign is used to copy the values of all enumerable own properties from one or more source objects to a target object, including getters and setters. It will return the target object. Properties are still allowed to be overridden.\n *\n * @param  {Object} target\n * @param  {...Object} sources\n * @return {Object} The target with assigned properties\n */\nconst completeAssign = createCompleteAssign({\n  enumerable: false,\n  configurable: true,\n  writeable: false\n});\n\nconst CONNECTED = 'connected';\nconst DISCONNECTED = 'dis' + CONNECTED;\n\nfunction createFactory(supr, component) {\n  function createElement(options, enhancer) {\n    if (!isUndefined(enhancer)) {\n      return enhancer(createElement)(options);\n    }\n\n    const el = supr();\n    let oldHtml;\n\n    function requestUpdate() {\n      const html = component.call(el, el);\n      return el.render(html);\n    }\n\n    function render(html) {\n      el.renderer(el.renderRoot, html, oldHtml);\n      oldHtml = html;\n      return html;\n    }\n\n    function connectedCallback() {\n      el.requestUpdate();\n      el.dispatchEvent(new CustomEvent(CONNECTED));\n    }\n\n    function disconnectedCallback() {\n      el.dispatchEvent(new CustomEvent(DISCONNECTED));\n    }\n\n    function attributeChangedCallback(name, oldValue, newValue) {\n      if (el.shouldUpdate(oldValue, newValue)) {\n        el.requestUpdate();\n      }\n    }\n\n    function shouldUpdate(oldValue, newValue) {\n      return oldValue !== newValue;\n    }\n\n    return completeAssign(el, {\n      render,\n      renderer,\n      connectedCallback,\n      disconnectedCallback,\n      attributeChangedCallback,\n      requestUpdate,\n      shouldUpdate,\n      get renderRoot() {\n        return el.shadowRoot || el._shadowRoot || el;\n      }\n    });\n  }\n\n  return createElement;\n}\n\nlet now = null;\nconst current = () => now;\n\nconst empty = [];\nconst setup = [];\n\nconst $ = value => typeof value === typeof $ ? value() : value;\n\nconst diff = (a, b) => (a.length !== b.length || a.some(diverse, b));\n\nconst stacked = id => runner => {\n  const state = {i: 0, stack: []};\n  runner[id] = state;\n  runner.before.push(() => {\n    state.i = 0;\n  });\n};\n\nlet id = 0;\nconst uid = () => '_$' + id++;\n\nconst unstacked = id => {\n  const {[id]: state, update} = now;\n  const {i, stack} = state;\n  state.i++;\n  return {i, stack, update, unknown: i === stack.length};\n};\n\nvar augmentor = fn => {\n  const current = runner($);\n  each(setup, current);\n  $.reset = () => {\n    each(current.reset, current);\n    for (const key in current) {\n      if (/^_\\$/.test(key))\n        current[key].stack.splice(0);\n    }\n  };\n  return $;\n  function $() {\n    const prev = now;\n    now = current;\n    const {_, before, after, external} = current;\n    try {\n      let result;\n      do {\n        _.$ = _._ = false;\n        each(before, current);\n        result = fn.apply(_.c = this, _.a = arguments);\n        each(after, current);\n        if (external.length)\n          each(external.splice(0), result);\n      } while (_._);\n      return result;\n    }\n    finally {\n      _.$ = true;\n      now = prev;\n    }\n  }\n};\n\nconst each = (arr, value) => {\n  const {length} = arr;\n  let i = 0;\n  while (i < length)\n    arr[i++](value);\n};\n\nconst runner = $ => {\n  const _ = {\n    _: true,\n    $: true,\n    c: null,\n    a: null\n  };\n  return {\n    _: _,\n    before: [],\n    after: [],\n    external: [],\n    reset: [],\n    update: () => _.$ ? $.apply(_.c, _.a) : (_._ = true)\n  };\n};\n\nfunction diverse(value, i) {\n  return value !== this[i];\n}\n\nconst id$1 = uid();\n\nlet cancel, request;\n\ntry {\n  cancel = cancelAnimationFrame;\n  request = requestAnimationFrame;\n} catch (o_O) {\n  cancel = clearTimeout;\n  request = setTimeout;\n}\n\nconst create = (always, check, inputs, raf, cb, stack, i) => {\n  const info = {\n    always,\n    cb,\n    check,\n    clean: null,\n    inputs,\n    raf,\n    t: 0,\n    update: check,\n    fn: () => {\n      set(stack[i], info.cb());\n    }\n  };\n  return info;\n};\n\nconst effect = raf => (cb, refs) => {\n  const {i, stack, unknown} = unstacked(id$1);\n  const comp = refs || empty;\n  if (unknown) {\n    const always = comp === empty;\n    const check = always || !raf || typeof comp !== typeof effect;\n    if (always || !raf || typeof comp !== typeof effect) {\n      stack.push(create(always, check, comp, raf, cb, stack, i));\n    } else {\n      current().external.push(result => refs(cb, result));\n      stack.push(create(always, always, empty, raf, effect, stack, i));\n    }\n  } else {\n    const info = stack[i];\n    const {check, always, inputs} = info;\n    if (check && (always || diff(inputs, comp))) {\n      info.cb = cb;\n      info.inputs = comp;\n      info.update = true;\n    }\n  }\n};\n\nconst set = (info, clean) => {\n  info.t = 0;\n  info.clean = clean;\n};\n\nsetup.push(runner => {\n  const stack = [];\n  const state = {i: 0, stack};\n  const drop = (current$$1, clean, raf, t) => {\n    if (raf && t)\n      cancel(t);\n    else if (clean)\n      clean();\n    set(current$$1, null);\n  };\n  runner[id$1] = state;\n  runner.before.push(() => {\n    state.i = 0;\n  });\n  runner.reset.push(() => {\n    state.i = 0;\n    for (let {length} = stack, i = 0; i < length; i++) {\n      const current$$1 = stack[i];\n      const {check, clean, raf, t} = current$$1;\n      if (check)\n        drop(current$$1, clean, raf, t);\n    }\n  });\n  runner.after.push(() => {\n    for (let {length} = stack, i = 0; i < length; i++) {\n      const current$$1 = stack[i];\n      const {check, clean, fn, raf, t, update} = current$$1;\n      if (check && update) {\n        current$$1.update = false;\n        drop(current$$1, clean, raf, t);\n        if (raf)\n          current$$1.t = request(fn);\n        else\n          fn();\n      }\n    }\n  });\n});\n\nconst useEffect = effect(true);\n\nconst id$2 = uid();\n\nsetup.push(stacked(id$2));\n\nvar ref = value => {\n  const {i, stack, unknown} = unstacked(id$2);\n  if (unknown) {\n    const info = {current: null};\n    stack.push(info);\n    info.current = $(value);\n  }\n  return stack[i];\n};\n\nconst id$3 = uid();\n\nsetup.push(stacked(id$3));\n\nvar useMemo = (callback, refs) => {\n  const {i, stack, unknown} = unstacked(id$3);\n  const comp = refs || empty;\n  if (unknown)\n    create$1(stack, -1, callback, comp);\n  const {filter, value, fn, inputs} = stack[i];\n  return (filter ? diff(inputs, comp) : (callback !== fn)) ?\n          create$1(stack, i, callback, comp) :\n          value;\n};\n\nconst create$1 = (stack, i, fn, inputs) => {\n  const info = {\n    filter: inputs !== empty,\n    value: null,\n    fn,\n    inputs\n  };\n  if (i < 0)\n    stack.push(info);\n  else\n    stack[i] = info;\n  info.value = fn();\n  return info.value;\n};\n\nvar callback = (fn, inputs) => useMemo(() => fn, inputs);\n\nconst id$4 = uid();\n\nsetup.push(stacked(id$4));\n\nvar useReducer = (reducer, value) => {\n  const {i, stack, unknown, update} = unstacked(id$4);\n  if (unknown) {\n    const info = [null, action => {\n      value = reducer(value, action);\n      info[0] = value;\n      update();\n    }];\n    stack.push(info);\n    info[0] = $(value);\n  }\n  return stack[i];\n};\n\nvar state = value => useReducer(\n  (_, value) => value,\n  value\n);\n\nconst id$5 = uid();\n\nsetup.push(stacked(id$5));\n\nlet element;\n\nfunction hooks(createElement) {\n  return options => {\n    const el = createElement(options);\n    const { component } = options;\n\n    const requestUpdate = augmentor(function() {\n      element = el;\n      const html = component.call(el, el);\n      return el.render(html);\n    });\n\n    el.requestUpdate = requestUpdate;\n    return el;\n  };\n}\n\nfunction useEffect$1(fn, inputs = []) {\n  const args = [fn];\n  if (inputs)\n    // if the inputs is an empty array\n    // observe the returned element for connect/disconnect events\n    // and invoke effects/cleanup on these events only\n    args.push(inputs.length ? inputs : lifecycleHandler);\n  return useEffect.apply(null, args);\n}\n\nfunction lifecycleHandler($) {\n  const handler = { handleEvent, onconnected, ondisconnected, $, _: null };\n  element.addEventListener(CONNECTED, handler, false);\n  element.addEventListener(DISCONNECTED, handler, false);\n}\n\nfunction handleEvent(e) {\n  this['on' + e.type]();\n}\n\nfunction onconnected() {\n  ondisconnected.call(this);\n  this._ = this.$();\n}\n\nfunction ondisconnected() {\n  const { _ } = this;\n  this._ = null;\n  if (_) _();\n}\n\nfunction propsToAttrs(createElement) {\n  return options => {\n    const el = createElement(options);\n    const { observedAttributes } = options;\n    addPropsToAttrs(Object.getPrototypeOf(el), observedAttributes);\n    return el;\n  };\n}\n\nfunction addPropsToAttrs(proto, attributes) {\n  attributes.forEach(name => {\n    // it is possible to redefine the behavior at any time\n    // simply overwriting get prop() and set prop(value)\n    if (!(name in proto)) {\n      Object.defineProperty(proto, camelCase(name), {\n        configurable: true,\n        get() {\n          return this.getAttribute(name);\n        },\n        set(value) {\n          if (value == null) this.removeAttribute(name);\n          else this.setAttribute(name, value);\n        }\n      });\n    }\n  });\n}\n\nconst CALLBACK = 'Callback';\nconst CONNECTED_CALLBACK = 'connected' + CALLBACK;\nconst DISCONNECTED_CALLBACK = 'dis' + CONNECTED_CALLBACK;\nconst ATTRIBUTE_CHANGED_CALLBACK = 'attributeChanged' + CALLBACK;\nconst ADOPTED_CALLBACK = 'adopted' + CALLBACK;\nconst OBSERVED_ATTRIBUTES = 'observedAttributes';\n\n/**\n * Defines a custom element in the `CustomElementRegistry` which renders the component which is passed as an argument.\n *\n * @param  {string} name The tag name for the custom element.\n * @param  {Function} component The component that is rendered in the element.\n * @param  {Function} [enhancer] The element enhancer. You may optionally specify it to enhance the element with third-party capabilities such as middleware, custom renderer, public API, etc. The only element enhancers that ship with Swiss Element are `applyMiddleware` and `renderer`.\n * @param  {Object|Array} [options] An options object with 2 optional properties `observedAttributes` and `extends` (e.g. `extends: 'button'`). You can also just pass an array which will be the `observedAttributes` array for shorter syntax.\n *\n * The options object is also passed to all the enhancers.\n *\n * @return {HTMLElement}\n */\nfunction element$1(name, component, enhancer, options) {\n  if (isFunction(name)) {\n    options = enhancer;\n    enhancer = component;\n    component = name;\n    name = undefined;\n  }\n\n  if (!isFunction(enhancer) && isUndefined(options)) {\n    options = enhancer;\n    enhancer = undefined;\n  }\n\n  // To shorten syntax if options is an array assume it's `observedAttributes`.\n  if (isArray(options)) {\n    options = { [OBSERVED_ATTRIBUTES]: options };\n  }\n\n  options = options || {};\n  name = options.name = findFreeTagName(name || options.name);\n\n  if (!isUndefined(enhancer) && !isFunction(enhancer)) {\n    throw new Error('Expected the enhancer to be a function.');\n  }\n\n  // The `hooks` and `propsToAttrs` enhancers are added by default.\n  enhancer = compose(\n    enhancer,\n    hooks,\n    propsToAttrs\n  );\n\n  const Native = getNativeConstructor(options && options.extends);\n  const SwissElement = extend(Native, function(supr) {\n    const opts = completeAssign({}, options, { component });\n    return createFactory(supr, component)(opts, enhancer);\n  });\n\n  // Callbacks have to be on the prototype before construction.\n  forwardCallbacks(SwissElement.prototype, [\n    CONNECTED_CALLBACK,\n    DISCONNECTED_CALLBACK,\n    ATTRIBUTE_CHANGED_CALLBACK,\n    ADOPTED_CALLBACK\n  ]);\n\n  const oa = (options[OBSERVED_ATTRIBUTES] =\n    options[OBSERVED_ATTRIBUTES] || []);\n  SwissElement[OBSERVED_ATTRIBUTES] = oa;\n\n  define(name, SwissElement, options);\n  return SwissElement;\n}\n\nfunction forwardCallbacks(proto, callbacks) {\n  callbacks.forEach(cb => {\n    proto[cb] = function(...args) {\n      if (this.hasOwnProperty(cb)) {\n        this[cb](...args);\n      }\n    };\n  });\n}\n\n/**\n * Adds a simple way to define your own renderer.\n * Verified libraries working by passing just the `render` or `patch` function:\n *\n * - Lighterhtml\n * - Lit-html\n * - HTM-Preact\n * - Superfine\n *\n * @param  {Function} customRenderer A function that takes the custom element root and a function `html` which once executed renders the created dom nodes to the root node of the custom element.\n *\n * @return {Function}\n */\nfunction renderer$1(customRenderer = renderer) {\n  return createElement => (...args) => {\n    const element = createElement(...args);\n\n    const renderWays = [\n      // default\n      (root, html) => customRenderer(root, html),\n      // lit-html, htm-preact\n      (root, html) => customRenderer(html, root),\n      // superfine\n      (root, html, old) => customRenderer(old, html, root),\n      // lighterhtml\n      (root, html) => customRenderer(root, () => html)\n    ];\n\n    /**\n     * Most library render functions look very similar, do a quick search on the\n     * first render. Probably shouldn't do this but it's so damn convenient :P\n     *\n     * This function is only called on the first render pass, after it's cached.\n     *\n     * @param  {HTMLElement} root\n     * @param  {Node|Function} html\n     * @param  {Number} i\n     * @return {*}\n     */\n    function findRenderWay(root, html, old, i = 0) {\n      element.renderer = renderWays[i];\n\n      let result;\n      try {\n        result = element.renderer(root, html, old);\n      } catch (err) {\n        i += 1;\n        if (i < renderWays.length) {\n          return findRenderWay(root, html, old, i);\n        }\n      }\n\n      return result || '';\n    }\n\n    element.renderer = findRenderWay;\n    return element;\n  };\n}\n\n/**\n * Middleware is the suggested way to extend Swiss Element with custom functionality. Middleware lets you wrap the element's render method for fun and profit. The key feature of middleware is that it is composable. Multiple middleware can be combined together, where each middleware requires no knowledge of what comes before or after it in the chain.\n *\n * @param  {...Function} middleware Functions that conform to the Swiss Element _middleware_ API. Each middleware receives `SwissElement`'s `render` function as a named argument, and returns a function. That function will be given the `next` middleware's render method, and is expected to return a function of `fragment` calling `next(fragment)` with a potentially different argument, or at a different time, or maybe not calling it at all. The last middleware in the chain will receive the real element's `render` method as the `next` parameter, thus ending the chain. So, the middleware signature is `({ render }) => next => fragment`.\n *\n * @return {Function}\n */\nfunction applyMiddleware(...middleware) {\n  return createElement => (...args) => {\n    const element = createElement(...args);\n\n    let render = () => {\n      throw new Error(\n        `Rendering while constructing your middleware is not allowed. ` +\n          `Other middleware would not be applied to this render.`\n      );\n    };\n\n    const middlewareAPI = {\n      render: (...args) => render(...args)\n    };\n\n    const chain = middleware.map(mw => mw(middlewareAPI));\n    render = compose(...chain)(element.render.bind(element));\n\n    element.render = render;\n    return element;\n  };\n}\n\nexport { renderer$1 as renderer, applyMiddleware, compose, element$1 as element, useEffect$1 as useEffect, callback as useCallback, useMemo, useReducer, ref as useRef, state as useState };\n","import { h, patch } from 'superfine';\nimport {\n  element,\n  renderer,\n  useState\n} from '../node_modules/swiss-element/dist/swiss-element.mjs';\n\nfunction Counter() {\n  const [count, setCount] = useState(0);\n\n  return h('div', {}, [\n    h('h1', {}, count),\n    h('button', { onclick: () => setCount(count - 1) }, '-'),\n    h('button', { onclick: () => setCount(count + 1) }, '+')\n  ]);\n}\n\nelement('s-counter', Counter, renderer(patch));\n"],"names":["XLINK_NS","EMPTY_OBJECT","EMPTY_ARRAY","isArray","Array","merge","a","b","target","i","eventProxy","event","currentTarget","events","type","updateProperty","element","name","lastValue","nextValue","isSvg","style","setProperty","slice","removeEventListener","addEventListener","nullOrFalse","removeAttribute","replace","removeAttributeNS","setAttributeNS","setAttribute","createElement","node","lifecycle","document","createTextNode","createElementNS","props","oncreate","push","length","children","appendChild","removeElement","parent","remove","removeChild","removeChildren","cb","ondestroy","onremove","getKey","key","patchElement","lastNode","nextNode","nodeValue","newElement","insertBefore","savedNode","childNode","lastKey","lastProps","nextProps","isRecycled","onupdate","updateElement","nextKey","lastChildren","lastChStart","lastChEnd","nextChildren","nextChStart","nextChEnd","lastKeyed","start","end","out","createKeyMap","nextKeyed","createVNode","h","rest","arguments","pop","createTextVNode","renderer","root","html","innerHTML","isFunction","value","isUndefined","findFreeTagName","suffix","tag","test","hasDash","self","customElements","get","isFreeTagName","prefix","id","idCounter","uniqueId","CustomEvent","params","newEvent","createEvent","initCustomEvent","bubbles","cancelable","options","completeAssign","enumerable","configurable","writeable","sources","forEach","source","prop","descriptor","Object","getOwnPropertyDescriptor","defineProperty","_extends","CONNECTED","DISCONNECTED","cancel","request","now","setup","stacked","runner","state","stack","before","uid","augmentor","fn","current","$","each","reset","splice","prev","_","after","external","result","apply","c","this","arr","update","id$1","cancelAnimationFrame","requestAnimationFrame","o_O","clearTimeout","setTimeout","drop","current$$1","clean","raf","t","info","set","check","id$2","id$3","id$4","useReducer","reducer","unknown","unstacked","action","id$5","hooks","el","component","requestUpdate","call","render","propsToAttrs","proto","observedAttributes","getPrototypeOf","$0","$1","toUpperCase","camelCase","getAttribute","customRenderer","CONNECTED_CALLBACK","DISCONNECTED_CALLBACK","ATTRIBUTE_CHANGED_CALLBACK","ADOPTED_CALLBACK","OBSERVED_ATTRIBUTES","enhancer","undefined","Error","fns","x","filter","Boolean","reduceRight","y","f","compose","ext","SwissElement","Base","init","Class","Reflect","construct","_this","constructor","prototype","create","extend","extends","HTMLElement","supr","opts","oldHtml","renderRoot","connectedCallback","dispatchEvent","disconnectedCallback","attributeChangedCallback","oldValue","newValue","shouldUpdate","shadowRoot","_shadowRoot","createFactory","hasOwnProperty","oa","Element","define","useState","count","setCount","onclick","container","renderWays","old","findRenderWay","err"],"mappings":"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"}